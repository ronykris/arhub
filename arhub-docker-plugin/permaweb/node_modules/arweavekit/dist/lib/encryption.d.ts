import * as Types from '../types/encryption';
/**
 * encryptFileWithAES
 * @param params data (to be encrypted) as ArrayBuffer
 * @returns object of raw AES key as Base64 and encrypted data as ArrayBuffer
 */
export declare function encryptDataWithAES(params: Types.EncryptDataWithAESProps): Promise<{
    rawEncryptedKeyAsBase64: string;
    combinedArrayBuffer: ArrayBufferLike;
}>;
/**
 * encryptAESKeywithRSA
 * @param params AES key as Base64 string
 * @returns RSA encrypted AES key as Uint8Array
 */
export declare function encryptAESKeywithRSA(params: Types.EncryptAESKeywithRSAProps): Promise<Uint8Array>;
export declare function decryptAESKeywithRSA(params: Types.DecryptAESKeywithRSAProps): Promise<string>;
/**
 * decryptFileWithAES
 * @param params object of encrypted data as ArrayBuffer and raw AES key as base64 string
 * @returns decrypted data as ArrayBuffer
 */
export declare function decryptDataWithAES(params: Types.DecryptDataWithAESProps): Promise<ArrayBuffer>;
