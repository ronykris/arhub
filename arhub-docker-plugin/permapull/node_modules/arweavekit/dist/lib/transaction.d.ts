import Transaction from 'arweave/node/lib/transaction';
import * as Types from '../types/transaction';
/**
 * create transaction
 * @params CreateTransactionProps
 * @returns Transaction | Bundlr Transaction
 */
export declare function createTransaction<T extends Types.CreateWalletTransactionProps | Types.CreateAndPostWalletTransactionProps | Types.CreateDataTransactionProps | Types.CreateAndPostDataTransactionProps | Types.CreateBundledDataTransactionProps | Types.CreateAndPostBundledDataTransactionProps>(params: T): Promise<Types.CreateTransactionReturnProps<T>>;
/**
 * sign transaction
 * @params SignTransactionProps
 * @returns SignedTransaction
 */
export declare function signTransaction(params: Types.SignTransactionProps): Promise<Transaction | {
    createdTransaction: Transaction;
    postedTransaction: {
        status: number;
        statusText: string;
        data: any;
    };
}>;
/**
 * post transaction
 * @params PostTransactionProps
 * @returns PostedTransaction
 */
export declare function postTransaction(params: Types.PostTransactionProps): Promise<{
    transaction: Transaction;
    postedTransaction: {
        status: number;
        statusText: string;
        data: any;
    };
}>;
export declare function getTransactionStatus(params: {
    transactionId: string;
    environment: 'local' | 'mainnet';
}): Promise<import("arweave/node/transactions").TransactionStatusResponse>;
/**
 *
 * @params GetTransactionProps
 * @returns Transaction
 */
export declare function getTransaction(params: Types.GetTransactionProps): Promise<Transaction>;
/**
 * CreateandPostTransactionWOthent
 * @params CreateandPostTransactionWOthentProps
 * @returns CreateandPostTransactionWOthentReturnProps
 */
export declare function createAndPostTransactionWOthent(params: Types.CreateandPostTransactionWOthentProps): Promise<Types.CreateandPostTransactionWOthentReturnProps>;
